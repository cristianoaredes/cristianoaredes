name: Playwright Tests with MCP

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

permissions:
  contents: read
  packages: read

jobs:
  test:
    name: Playwright Tests with MCP
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install serve
      run: npm install -g serve

    - name: Start website server
      run: |
        npx serve -s . -l 3000 > serve.log 2>&1 &
        echo "SERVE_PID=$!" >> $GITHUB_ENV
        sleep 3  # Give server time to start

    - name: Verify website is running
      run: |
        curl -s http://localhost:3000 > /dev/null || (echo "Website server failed to start" && exit 1)

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      env:
        PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright

    - name: Start MCP server
      run: |
        retries=5
        while [ $retries -gt 0 ]; do
          npx @microsoft/playwright-mcp --port 7342 > mcp.log 2>&1 &
          MCP_PID=$!
          echo "MCP_PID=$MCP_PID" >> $GITHUB_ENV
          sleep 5  # Give MCP server time to start
          if curl -s http://localhost:7342 > /dev/null; then
            echo "MCP server started successfully"
            break
          else
            echo "MCP server failed to start, retrying..."
            kill $MCP_PID 2>/dev/null || true
            retries=$((retries-1))
            sleep 5
          fi
        done
        if [ $retries -eq 0 ]; then
          echo "MCP server failed to start after multiple attempts"
          exit 1
        fi

    - name: Verify MCP server is running
      run: |
        curl -s http://localhost:7342 > /dev/null || (echo "MCP server failed to start" && exit 1)

    - name: Run Playwright tests with MCP
      run: npm run test:mcp
      env:
        BASE_URL: http://localhost:3000
        MCP_URL: http://localhost:7342

    - name: Periodic health check for MCP server
      run: |
        while true; do
          if ! curl -s http://localhost:7342 > /dev/null; then
            echo "MCP server is not responding"
            exit 1
          fi
          sleep 60
        done &
        echo "HEALTH_CHECK_PID=$!" >> $GITHUB_ENV

    - name: Stop servers and show logs
      if: always()
      run: |
        # Stop MCP server if running
        if [ -n "$MCP_PID" ]; then
          echo "Stopping MCP server (PID: $MCP_PID)"
          kill $MCP_PID 2>/dev/null || true
        fi
        
        # Stop website server if running
        if [ -n "$SERVE_PID" ]; then
          echo "Stopping website server (PID: $SERVE_PID)"
          kill $SERVE_PID 2>/dev/null || true
        fi
        
        # Stop health check if running
        if [ -n "$HEALTH_CHECK_PID" ]; then
          echo "Stopping health check (PID: $HEALTH_CHECK_PID)"
          kill $HEALTH_CHECK_PID 2>/dev/null || true
        fi
        
        # Show logs
        echo "=== Website Server Logs ==="
        cat serve.log 2>/dev/null || echo "No website server logs found"
        
        echo "\n=== MCP Server Logs ==="
        cat mcp.log 2>/dev/null || echo "No MCP server logs found"

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload test traces
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-traces
        path: test-results/
        retention-days: 30
